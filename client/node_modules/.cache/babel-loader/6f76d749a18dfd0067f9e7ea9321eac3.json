{"ast":null,"code":"var _jsxFileName = \"/home/dian/moringa/phase4/Phase-4-Pizzas/client/src/components/PizzaForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PizzaForm({\n  restaurantId,\n  onAddPizza\n}) {\n  _s();\n\n  const [pizzas, setPizzas] = useState([]);\n  const [pizzaId, setPizzaId] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [formErrors, setFormErrors] = useState([]);\n  useEffect(() => {\n    fetch(\"/pizzas\").then(r => r.json()).then(setPizzas);\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const formData = {\n      pizza_id: pizzaId,\n      restaurant_id: restaurantId,\n      price: parseInt(price)\n    };\n    fetch(\"/restaurant_pizzas\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(newPizza => {\n          onAddPizza(newPizza);\n          setFormErrors([]);\n        });\n      } else {\n        r.json().then(err => setFormErrors(err.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"pizza_id\",\n      children: \"Pizza:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"pizza_id\",\n      name: \"pizza_id\",\n      value: pizzaId,\n      onChange: e => setPizzaId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a pizza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), pizzas.map(pizza => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: pizza.id,\n        children: pizza.name\n      }, pizza.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"pizza_id\",\n      children: \"Price:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: price,\n      onChange: e => setPrice(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), formErrors.length > 0 ? formErrors.map(err => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: err\n    }, err, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add To Restaurant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PizzaForm, \"WBkRYUu7zxqybRhyC7RQTLuFbjk=\");\n\n_c = PizzaForm;\nexport default PizzaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PizzaForm\");","map":{"version":3,"sources":["/home/dian/moringa/phase4/Phase-4-Pizzas/client/src/components/PizzaForm.js"],"names":["useEffect","useState","PizzaForm","restaurantId","onAddPizza","pizzas","setPizzas","pizzaId","setPizzaId","price","setPrice","formErrors","setFormErrors","fetch","then","r","json","handleSubmit","e","preventDefault","formData","pizza_id","restaurant_id","parseInt","method","headers","body","JSON","stringify","ok","newPizza","err","errors","target","value","map","pizza","id","name","length","color"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction PizzaForm({ restaurantId, onAddPizza }) {\n  const [pizzas, setPizzas] = useState([]);\n  const [pizzaId, setPizzaId] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [formErrors, setFormErrors] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/pizzas\")\n      .then((r) => r.json())\n      .then(setPizzas);\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const formData = {\n      pizza_id: pizzaId,\n      restaurant_id: restaurantId,\n      price: parseInt(price),\n    };\n    fetch(\"/restaurant_pizzas\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((newPizza) => {\n          onAddPizza(newPizza);\n          setFormErrors([]);\n        });\n      } else {\n        r.json().then((err) => setFormErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"pizza_id\">Pizza:</label>\n      <select\n        id=\"pizza_id\"\n        name=\"pizza_id\"\n        value={pizzaId}\n        onChange={(e) => setPizzaId(e.target.value)}\n      >\n        <option value=\"\">Select a pizza</option>\n        {pizzas.map((pizza) => (\n          <option key={pizza.id} value={pizza.id}>\n            {pizza.name}\n          </option>\n        ))}\n      </select>\n      <label htmlFor=\"pizza_id\">Price:</label>\n      <input\n        type=\"number\"\n        value={price}\n        onChange={(e) => setPrice(e.target.value)}\n      />\n      {formErrors.length > 0\n        ? formErrors.map((err) => (\n            <p key={err} style={{ color: \"red\" }}>\n              {err}\n            </p>\n          ))\n        : null}\n      <button type=\"submit\">Add To Restaurant</button>\n    </form>\n  );\n}\n\nexport default PizzaForm;\n"]},"metadata":{},"sourceType":"module"}